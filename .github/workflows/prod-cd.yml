name: cd-prod

on:
  push:
    branches: [ "main" ]

jobs:
  docker-build-push:
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle / Run Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.PROD_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.PROD_DOCKER_HUB_PASSWORD }}

      - name: Docker Image Build and Push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.PROD_DOCKER_HUB_REPOSITORY_TAGNAME }}

  send-docker-compose-file-to-ec2:
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      #todo: docker-compose파일을 서브 모듈 밖으로 꺼내기, 빌드 작업 없애기
      #서브모듈 내부에 있는 docker-compose파일을 복사해서 외부로 꺼내는 task를 수행하기 위한 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Copy Deployment Files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.PROD_EC2_INSTANCE_HOST }}
          username: ${{ secrets.PROD_EC2_INSTANCE_USERNAME }}
          key: ${{ secrets.PROD_EC2_INSTANCE_PRIVATE_KEY }}
          source: './deploy/prod/*'
          target: '~/pickple/deploy'
          strip_components: 2

  deploy-to-ec2:
    needs: [ docker-build-push, send-files-to-ec2 ]
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - name: Docker Container Run
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_EC2_INSTANCE_HOST }}
          username: ${{ secrets.PROD_EC2_INSTANCE_USERNAME }}
          key: ${{ secrets.PROD_EC2_INSTANCE_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.PROD_DOCKER_HUB_REPOSITORY_TAGNAME }}
            cd ~/pickple/deploy
            docker-compose -p pickple-prod down
            docker-compose -p pickple-prod up -d
            docker image prune -f